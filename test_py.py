import streamlit as st

# --- 1. Set Page Configuration (Optional, but good practice) ---
st.set_page_config(
    page_title="Ù…Ø³Ø§Ø¹Ø¯ Ø§Ù„ØªØ­ÙŠØ© Ø§Ù„Ø¨Ø³ÙŠØ·", # Page title in browser tab
    page_icon="ðŸ‘‹",                  # Favicon
    layout="centered"                # Page layout
)

# --- 2. Display the App Title and Introduction ---
st.title("Ù…Ø³Ø§Ø¹Ø¯ Ø§Ù„ØªØ­ÙŠØ© Ø§Ù„Ø¨Ø³ÙŠØ· ðŸ‘‹")
st.markdown("Ø§Ø®ØªØ± ØªØ­ÙŠØ© ÙˆØ³Ø£Ø±Ø¯ Ø¹Ù„ÙŠÙ‡Ø§.")

# --- 3. Create Options for the User as Buttons ---
# We'll use st.button() for each greeting.
# The button returns True when clicked, so we check that.

# Initialize a variable to hold the response message
response_message = ""

col1, col2 = st.columns(2) # Create two columns for buttons

with col1:
    if st.button("Ù‚Ù„ Ù…Ø±Ø­Ø¨Ø§Ù‹", key="say_hi_button"):
        response_message = "Ù…Ø±Ø­Ø¨Ø§Ù‹!"

with col2:
    if st.button("Ù‚Ù„ Ø£Ù‡Ù„Ø§Ù‹", key="say_hello_button"):
        response_message = "Ø£Ù‡Ù„Ø§Ù‹ Ø¨Ùƒ!"

# --- 4. Logic to Respond Based on Button Clicks ---
# Display the response if a button was clicked
if response_message:
    st.write(response_message)
else:
    st.info("Ø§Ù„Ø±Ø¬Ø§Ø¡ Ø§Ø®ØªÙŠØ§Ø± ØªØ­ÙŠØ© Ù…Ù† Ø§Ù„Ø£Ø²Ø±Ø§Ø± Ø£Ø¹Ù„Ø§Ù‡.") # Provide a hint if no button clicked yet

# --- Optional: Add a footer or other elements ---
st.markdown("---")
st.caption("Ù…Ø³Ø§Ø¹Ø¯ Ø¨Ø³ÙŠØ· ØªÙ… Ø¥Ù†Ø´Ø§Ø¤Ù‡ Ø¨Ø§Ø³ØªØ®Ø¯Ø§Ù… Streamlit.")
